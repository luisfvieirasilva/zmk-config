/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        l_hm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <6 18 30 39 40 41 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35>;
        };

        r_hm: right_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "R_HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <27 28 29 36 37 38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q         &kp W         &kp E          &kp R          &kp T        &kp Y        &kp U            &kp I          &kp O             &kp P            &none
&none  &l_hm LGUI A  &l_hm LALT S  &l_hm LCTRL D  &l_hm LSHFT F  &kp G        &kp H        &r_hm RSHIFT J   &r_hm RCTRL K  &r_hm LEFT_ALT L  &r_hm LGUI SEMI  &none
&none  &kp Z         &kp X         &kp C          &kp V          &kp B        &kp N        &kp M            &kp COMMA      &kp DOT           &kp FSLH         &none
                                   &lt 6 ESC      &lt 4 SPACE    &lt 5 TAB    &lt 2 ENTER  &lt 1 BACKSPACE  &lt 3 DELETE
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LBKT   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp RBKT         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SQT    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp EQUAL        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSLASH    &trans  &trans  &trans  &trans  &trans  &trans
                                    &kp DOT          &kp KP_NUMBER_0  &kp KP_MINUS     &trans  &trans  &trans
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LBRC           &kp AMPERSAND    &kp ASTERISK  &kp LPAR   &kp RBRC          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp PLUS          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE          &kp EXCLAMATION  &kp AT        &kp HASH   &kp PIPE          &trans  &trans  &trans  &trans  &trans  &trans
                                            &kp LPAR      &kp RPAR   &kp UNDERSCORE    &trans  &trans  &trans
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5     &kp F6     &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2     &kp F3     &trans             &trans  &trans  &trans  &trans  &trans  &trans
                         &kp GLOBE  &kp SPACE  &kp TAB            &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp K_REDO  &kp K_PASTE    &kp K_COPY     &kp K_CUT  &kp K_UNDO    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT    &kp UP         &kp DOWN       &kp RIGHT  &kp CAPSLOCK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp INSERT  &kp PAGE_UP    &kp PAGE_DOWN  &kp HOME   &kp END       &trans
                        &trans  &trans  &trans    &kp ENTER   &kp BACKSPACE  &kp DELETE
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &bt BT_CLR    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans           &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp K_PREVIOUS        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &kp K_NEXT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans                &trans                &trans           &trans      &trans
                        &trans  &trans  &trans    &kp C_STOP  &kp C_PLAY_PAUSE      &kp K_MUTE
            >;
        };
    };
};
